name: Test with pytest

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  test_py38:
    runs-on: ubuntu-latest
    steps:
    - name: Set up python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - uses: actions/checkout@v3
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade pytest "jax[cpu]" flax torch tensorflow einops dask tinygrad scipy
    - name: Run tests
      run: |
        pip install .
        EINX_FILTER_TRACEBACK=0 pytest test
        EINX_FILTER_TRACEBACK=0 pytest test/test_invalid_backend.py --noconftest

  test_py310:
    runs-on: ubuntu-latest
    steps:
    - name: Set up python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Set up OS
      run: |
        sudo rm -rf /usr/share/dotnet || true
        sudo rm -rf /opt/ghc || true
        sudo rm -rf /usr/local/.ghcup || true
        sudo apt-get autoremove -y
        sudo apt-get clean -y
        sudo apt update -y
        sudo apt install cmake liblapacke-dev libopenblas-dev liblapack-dev git -y
    - uses: actions/checkout@v3
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade pytest "jax[cpu]" flax dm-haiku torch tensorflow einops equinox dask tinygrad scipy
        pip install --upgrade keras

        pip install git+https://github.com/wjakob/nanobind.git@2f04eac452a6d9142dedb957701bdb20125561e4
        git clone https://github.com/ml-explore/mlx
        cd mlx && CMAKE_BUILD_PARALLEL_LEVEL="1" pip install --verbose . && cd ..
    - name: Run tests
      run: |
        pip install .
        EINX_FILTER_TRACEBACK=0 pytest test
        EINX_FILTER_TRACEBACK=0 pytest test/test_invalid_backend.py --noconftest

        pip install --upgrade "torch==2.4.0"
        EINX_FILTER_TRACEBACK=0 pytest test --backend torch
        pip install --upgrade "torch==2.3.0"
        EINX_FILTER_TRACEBACK=0 pytest test --backend torch
        pip install --upgrade "torch==2.2.0" numpy<2
        EINX_FILTER_TRACEBACK=0 pytest test --backend torch
        pip install --upgrade "torch==2.1.0" numpy<2
        EINX_FILTER_TRACEBACK=0 pytest test --backend torch
        pip install --upgrade "torch==2.0.0" numpy<2
        EINX_FILTER_TRACEBACK=0 pytest test --backend torch
        pip install --upgrade "torch<2" numpy<2
        EINX_FILTER_TRACEBACK=0 pytest test/test_invalid_backend_version.py
